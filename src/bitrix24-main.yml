---

- name: create crontab
  tags: [ bitrix24, crontab ]
  template: >
    src=crontab.j2
    dest=/etc/cron.d/bitrix24

- name: create logs directory
  tags: [ bitrix24, phpfpm, logrotate ]
  shell: mkdir -p /var/log/phpfpm
  args: { creates: /var/log/phpfpm }

- name: create logrotate
  tags: [ bitrix24, logrotate ]
  template: >
    src=logrotate.j2
    dest=/etc/logrotate.d/bitrix24

- name: create mysql volume
  tags: [ bitrix24, mysql ]
  shell: docker volume inspect mysql_data || docker volume create --name mysql_data
  args: { creates: /var/lib/docker/volumes/mysql_data }

- name: create mysql container
  tags: [ bitrix24, mysql ]
  docker_container:
    name: mysql
    image: docker.magnifico.pro/realty/bitrix24:mysql
    restart_policy: unless-stopped
    state: started
    network_mode: host
    pull: true
    log_options: { max-size: "128m", max-file: "3" }
    log_driver: json-file
    volumes: [ "mysql_data:/var/lib/mysql" ]
    env:
      MYSQL_INNODB_BUFFER_POOL_INSTANCES: "2"
      MYSQL_INNODB_BUFFER_POOL_SIZE: "512M"
      MYSQL_MAX_CONNECTIONS: "128"

- name: create sphinx volume
  tags: [ bitrix24, sphinx ]
  shell: docker volume inspect sphinx_data || docker volume create --name sphinx_data
  args: { creates: /var/lib/docker/volumes/sphinx_data }

- name: create sphinx container
  tags: [ bitrix24, sphinx ]
  docker_container:
    name: sphinx
    image: docker.magnifico.pro/realty/bitrix24:sphinx
    restart_policy: unless-stopped
    state: started
    network_mode: host
    pull: true
    log_options: { max-size: "128m", max-file: "3" }
    log_driver: json-file
    volumes: [ "sphinx_data:/var/lib/sphinxsearch" ]

- name: create redis volume
  tags: [ bitrix24, redis ]
  shell: docker volume inspect redis_data || docker volume create --name redis_data
  args: { creates: /var/lib/docker/volumes/redis_data }

- name: create redis container
  tags: [ bitrix24, redis ]
  docker_container:
    name: redis
    image: docker.magnifico.pro/realty/bitrix24:redis
    restart_policy: unless-stopped
    state: started
    network_mode: host
    pull: true
    log_options: { max-size: "128m", max-file: "3" }
    log_driver: json-file
    volumes: [ "redis_data:/var/lib/redis" ]
    env:
      REDIS_MAXMEMORY: "256mb"

- name: create /root/.ssh
  tags: [ bitrix24, git ]
  file:
    path: /root/.ssh
    state: directory
    mode: 0700

- name: create ssh keys
  tags: [ bitrix24, git ]
  copy: >
    content="{{ item.content }}"
    dest="{{ item.dest }}"
    owner=root
    mode=600
  with_items:
    - { content: "{{ ssh_key.id_rsa }}", dest: "/root/.ssh/id_rsa" }
    - { content: "{{ ssh_key.id_rsa_pub }}", dest: "/root/.ssh/id_rsa.pub" }

# - name: clone bitrix24 repository
#   tags: [ bitrix24, git, deploy ]
#   git:
#     repo: git@gitlab.regionalrealty.ru:realty/bitrix24.git
#     dest: /app
#     depth: 1
#     version: master
#     force: yes
#     accept_hostkey: yes

- name: create phpfpm container
  tags: [ bitrix24, phpfpm, deploy ]
  docker_container:
    name: "phpfpm"
    image: docker.magnifico.pro/realty/bitrix24:phpfpm
    restart_policy: unless-stopped
    state: started
    network_mode: host
    pull: true
    log_options: { max-size: "128m", max-file: "3" }
    log_driver: json-file
    volumes:
      - "/app:/app"
      - "/var/log/phpfpm:/var/log/phpfpm"
    env:
      PHPFPM_DEBUG: "0"

# - name: composer install
#   tags: [ bitrix24, deploy ]
#   shell: >
#     docker exec --user phpfpm:phpfpm phpfpm composer global require 'hirak/prestissimo:^0.3' &&\
#       composer install --prefer-dist --no-interaction &&\
#       composer clearcache

- name: check manage php
  tags: [ bitrix24, deploy ]
  shell: >
    docker exec --user phpfpm:phpfpm phpfpm test -f /app/www/bitrix/modules/magnifico.console/manage.php && echo 1 || echo 0
  register: exists_manage_php

- name: phinx migrate
  tags: [ bitrix24, deploy ]
  when: exists_manage_php.stdout == "1"
  shell: >
    docker exec --user phpfpm:phpfpm phpfpm php /app/manage.php phinx:migrate

- name: install certbot
  tags: [ bitrix24, nginx ]
  apt: >
    name="{{ item.name }}"
    default_release="jessie-backports"
    state=present
    update_cache=yes
    cache_valid_time=100000
  with_items:
    - { name: certbot }

- name: generate https certificates
  tags: [ bitrix24, nginx ]
  shell: "certbot certonly --non-interactive --agree-tos --email admin@{{ nginx_server_name }} --standalone --domain {{ nginx_server_name }}"
  args: { creates: "/etc/letsencrypt/live/{{ nginx_server_name }}" }

- name: remove certbot crontab
  tags: [ bitrix24, crontab ]
  file: >
    path="/etc/cron.d/certbot"
    state="absent"

- name: create nginx container
  tags: [ bitrix24, nginx, deploy ]
  docker_container:
    name: "nginx"
    image: docker.magnifico.pro/realty/bitrix24:nginx
    restart_policy: unless-stopped
    state: started
    network_mode: host
    pull: true
    log_options: { max-size: "128m", max-file: "3" }
    log_driver: json-file
    volumes:
      - "/app:/app"
      - "/etc/letsencrypt:/etc/letsencrypt"
    env:
      NGINX_SERVER_NAME: "{{ nginx_server_name }}"
